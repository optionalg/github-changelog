// wrapper so we can have caret above it and still use overflow-y (otherwise it gets hidden)
.github-changelog {
  position: relative;
  display: inline-block;
  text-align: left;

  .github-changelog-list{
    position: absolute;
  }
  .github-changelog-footer{
    background-color: @default-bg-color;
    color: @default-color;
    text-align: center;
    border: @list-border;
    border-top: none;
    padding: @list-footer-padding;
    .border-radius(0, @default-border-radius, @default-border-radius, 0);
    .drop-shadow(1px, 3px, 7px, 0.1);
    .clearfix();
  }
  ul{
    min-width: @list-min-width;
    max-height: @list-max-height;
    list-style: none;
    background-color: @list-bg-color;
    color: @default-color;
    border: @list-border;
    overflow-y: auto;
    .border-radius(@default-border-radius, 0, 0, @default-border-radius);
    .drop-shadow(1px, 3px, 7px, 0.1);

    // rounded corners when no footer is present
    &:only-child{
      .rounded(@default-border-radius);
    }

    li {
      padding: @list-item-padding;
      display: block;
      border-bottom: 1px solid @list-item-border-color;
      .clearfix();
      &:last-child {
        border-bottom: none;
      }
      .github-changelog-label{
        float: left;
        font-size: .75em;
        font-weight: bold;
        text-transform: uppercase;
        text-align: center;
        background-color: @label-bg-color;
        color: @label-color;
        .rounded(@default-border-radius);
        .box-sizing();
        width: @label-width;

        //label types
        &.bug{
          background-color: @label-bug-bg-color;
          color: @label-bug-color;
        }
        &.feature{
          background-color: @label-feature-bg-color;
          color: @label-feature-color;
        }
        &.enhancement{
          background-color: @label-enhancement-bg-color;
          color: @label-enhancement-color;
        }
        & + p{
          margin-left: @label-width;
        }
      }
      p {
        text-align: left;
        padding-left: 1em;
        .box-sizing();
      }
    }
    //style scrollbar
    &::-webkit-scrollbar {
      width: 9px;
      background-color: @scrollbar-bg-color;
    }
    &::-webkit-scrollbar-thumb {
      background-color: @scrollbar-thumb-color;
      .rounded(10px);
    }
  }
  // list closed state
  &.closed{
    .github-changelog-list{
      display: none;
    }
    .github-changelog-btn:before{
      display: none;
    }
  }
  // list positioning
  &.top {
    .github-changelog-list{
      bottom: 100%;
      .align-h();
      margin-bottom: @caret-width*2 - 0.06em;
    }
    >.github-changelog-btn {
      .set-caret('top', @caret-width, @caret-color);
    }
  }
  &.left {
    .github-changelog-list{
      top: 0;
      right: 100%;
      margin-right: @caret-width*2 - 0.06em;
    }
    >.github-changelog-btn {
      .set-caret('left', @caret-width, @caret-color);
    }
  }
  &.right {
    .github-changelog-list{
      top: 0;
      left: 100%;
      margin-left: @caret-width*2 - 0.06em;
    }
    >.github-changelog-btn{
      .set-caret('right', @caret-width, @caret-color);
    }
  }
  &.bottom {
    .github-changelog-list{
      top: 100%;
      .align-h();
      margin-top: @caret-width*2 - 0.06em;
    }
    >.github-changelog-btn {
      .set-caret('bottom', @caret-width, @caret-color);
    }
  }
  &.pull-top{
    .github-changelog-list{
      top: auto;
      bottom: 0;
    }
  }
  &.pull-right{
    .github-changelog-list{
      right: auto;
      left: 0;
      .translate(0, 0);
    }
  }
  &.pull-left{
    .github-changelog-list{
      left: auto;
      right: 0;
      .translate(0, 0);
    }
  }
}
